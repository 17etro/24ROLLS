{"version":3,"sources":["components/HeadingBlock/index.jsx","components/MobileFilters/MobileFilters.js","page/PageWrapper/index.jsx"],"names":["HeadingBlock","title","svg","className","MobileFilters","props","useCustomStore","state","dispatch","filters","map","el","style","filterMode","_id","border","onClick","type","ACTIONS","DROP_FILTER","SET_FILTER","filterId","alt","src","backendUrl","image","PageWrapper","React","memo","t","useTranslation","useFetch","url","response","error","isLoading","useState","filteredGoods","setFilteredGoods","loading","setLoading","err","setErr","useEffect","cityShop","store","get","customOptions","city","goodsWithCity","filter","valid","shop","name","forEach","axios","categoryId","then","res","data","catch","finally","Helmet","content","async","name_ru","description_ru","price","JSON","stringify","createJSONLD","Spinner","ErrorIndicator","CustomFoodBlock","key","food"],"mappings":"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","file":"static/js/4.9c1f8ed4.chunk.js","sourcesContent":["import React from 'react';\nimport './index.scss';\n\nconst HeadingBlock = ({title, svg}) => {\n    return (\n        <div className=\"heading-blog\">\n            <h2>\n                {title}\n            </h2>\n        </div>\n    )\n}\n\nexport default HeadingBlock;","import React from 'react';\r\nimport { backendUrl } from '../../config/config';\r\nimport { useCustomStore } from '../../context/useStore';\r\nimport { ACTIONS } from '../../context/providerContext';\r\n\r\nimport './mobileFilters.scss';\r\n\r\nconst MobileFilters = (props) => {\r\n\r\n    const { state, dispatch } = useCustomStore();\r\n\r\n    return (\r\n        <div className=\"mobile-filters-block-content\">\r\n            {props.filters && props.filters.map((el) => {\r\n                return (\r\n                    <div \r\n                    className=\"mobile-filters-block-content__container\"\r\n                    style={state.filterMode === el._id ? { border: '2px solid #F89F46'} : null}>\r\n                    <img\r\n                        onClick={\r\n                            state.filterMode === el._id ?\r\n                            () => dispatch({ type: ACTIONS.DROP_FILTER }) \r\n                            :\r\n                            () => dispatch({ type: ACTIONS.SET_FILTER, filterId: el._id })\r\n                        }\r\n                        className=\"mobile-filters-block-content__container__item\"\r\n                        alt={el.alt}\r\n                        src={backendUrl + '/' + el.image} \r\n                    />\r\n                    </div>\r\n                );\r\n            })}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MobileFilters;","import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport store from 'store';\nimport { backendUrl } from '../../config/config';\nimport { useTranslation } from 'react-i18next';\nimport { useCustomStore } from '../../context/useStore';\nimport { Helmet } from 'react-helmet';\nimport {string} from \"prop-types\";\n\nimport './index.scss';\nimport CustomFoodBlock from \"../../components/CustomFoodBlock\";\nimport HeadingBlock from '../../components/HeadingBlock';\nimport MobileFilters from '../../components/MobileFilters/MobileFilters';\nimport useFetch from \"../../api/useFetch\";\nimport Spinner from \"../../components/Spinner\";\nimport ErrorIndicator from \"../../components/Errors/ErrorIndicator\";\n\nconst PageWrapper = React.memo((props) => {\n    const {t} = useTranslation();\n    const [ response, error, isLoading ] = useFetch(props.url);\n    const [ filteredGoods, setFilteredGoods ] = useState([]);\n    const [ loading, setLoading ] = useState(false);\n    const [ err, setErr ] = useState(false);\n\n    const { state } = useCustomStore();\n\n\n    const createJSONLD = () => {\n        const data = {\n            '@context': 'https://schema.org/',\n            \"@type\": \"Offer\",\n            \"category\": props.title,\n            'brand': '24ROLLS',\n            'name': props.title,\n            'itemOffered': filteredGoods.map(el => ({\n                '@type': 'Product',\n                'category': props.title,\n                'material': props.title,\n                'productID': el._id,\n                'slogan': el.name_ru,\n                'name': el.name_ru,\n                'brand': {\n                    '@type': 'Organization',\n                    'name': '24ROLLS',\n                    'address': 'Днепр, Запорожье',\n                    'location': 'Днепр, Запорожье'\n                },\n                'description': el.description_ru,\n                'image': el.image,\n                'offers': {\n                    '@type': 'Offer',\n                    'offeredBy': {\n                        '@type': 'Organization',\n                        'name': '24ROLLS',\n                        'address': 'Днепр, Запорожье',\n                        'location': 'Днепр, Запорожье'\n                    },\n                    'seller': {\n                        '@type': 'Organization',\n                        'name': '24ROLLS',\n                        'address': 'Днепр, Запорожье',\n                        'location': 'Днепр, Запорожье'\n                    },\n                    'category': props.title,\n                    'priceCurrency': 'UAH',\n                    'price': el.price\n                }\n            }))\n        };\n\n        return JSON.stringify(data);\n    }\n\n    useEffect(() => {\n\n        const cityShop = store.get('24rolls').customOptions.city;\n\n        if (response) {\n            const goodsWithCity = response.filter(el => {\n                let valid = false;\n                if (cityShop === 'Dnipro') {\n                    el.shop.map(el => {\n                        if (el.name === 'Dp') valid = true;\n                    });\n                }\n                else if (cityShop === 'Zaporijja') {\n                    el.shop.forEach(el => {\n                        if (el.name === 'Zp' ) valid = true;\n                    });\n                }\n                else if (cityShop === 'Kharkov') {\n                    el.shop.forEach(el => {\n                        if (el.name === 'Kh' ) valid = true;\n                    });\n                }\n                \n                return valid;\n            });\n            setFilteredGoods(goodsWithCity);\n        }\n\n        if (state.filterMode) {\n            setLoading(true);\n            axios.get(backendUrl + `/products/filter/category/${props.categoryId}/${state.filterMode}`)\n                .then(res => {\n                    setFilteredGoods(res.data);\n                    setErr(false);\n                })\n                .catch(err => {})\n                .finally(() => setLoading(false));\n        }\n    }, [ state.filterMode, response ]);\n    \n    return (\n        <div className={'rolls_container'}>\n\n            <Helmet>\n                <meta name=\"keywords\" content=\"Заказать суши, роллы, wok, пасту, салаты, супы, напитки, доставка, Днепр, Запорожье, Харьков, вкусно,  быстрая доставка\" />\n                <script async type=\"application/ld+json\">\n                    {createJSONLD()}\n                </script>\n            </Helmet>\n\n            {!err && !error &&\n                <>\n                    <HeadingBlock title={t(props.title)} svg={true} />\n                    {<MobileFilters filters={props.filters} />}\n                </>\n            }\n            {( isLoading || loading ) && <Spinner /> }\n            {(error || err ) && !isLoading && !loading && <ErrorIndicator />}\n            {\n                filteredGoods \n                && !isLoading \n                && !loading \n                &&  !err\n                && !error &&\n                    <div className={'rolls_container_block'}>\n                        {\n                            filteredGoods.map(el =>\n                                <CustomFoodBlock \n                                {...props} \n                                style={'open-modal'} \n                                key={el._id} \n                                food={el} \n                                />\n                            )\n                        }\n                    </div>\n            }\n            {\n                !filteredGoods[0] \n                && !isLoading \n                && !loading \n                &&  !err\n                && !error &&\n                <p> {'Нет данных товаров...'} </p>\n            }\n        </div>\n    )\n});\n\nPageWrapper.propTypes = {\n    title: string.isRequired,\n    url: string\n}\n\nexport default PageWrapper;"],"sourceRoot":""}