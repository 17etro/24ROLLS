{"version":3,"sources":["page/Reviews/services/review-requests.js","page/Reviews/Reviews.jsx"],"names":["getAllReviews","data","a","setLoading","setError","currentPage","axios","get","backendUrl","result","console","log","e","response","onCreateNewReview","file","content","rating","token","formData","FormData","append","post","headers","Authorization","message","SuccessCreatedModalContent","Reviews","user","store","useState","loading","error","reviews","setReviews","showForm","setShowForm","successCreatedReview","setSuccessCreatedReview","setCurrentPage","setContent","imagePreviewUrl","uploadedFile","setUploadedFile","setRating","location","useLocation","useEffect","requestResult","onGetAllReviews","onButtonReviewClicked","el","formStyles","createDisabled","length","Spinner","Modal","show","modalClosed","className","onClick","count","value","onChange","val","size","savingValue","slice","onChangeContent","target","placeholder","for","reader","FileReader","onloadend","files","readAsDataURL","type","id","accept","disabled","src","to","pathname","map","index","status","avatar","userId","name","dayjs","date","locale","format","edit","image","creatingData"],"mappings":"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","file":"static/js/17.0949b735.chunk.js","sourcesContent":["import axios from \"axios\";\r\nimport { backendUrl } from \"../../../config/config\";\r\n\r\nexport const getAllReviews = async (data) => {\r\n  const { setLoading, setError, currentPage } = data;\r\n\r\n  try {\r\n    setLoading(true);\r\n    const result = await axios.get(backendUrl + `/replies/?page=${currentPage}`);\r\n    return result;\r\n  } catch (e) {\r\n    console.log(e.e.response);\r\n    setError(true);\r\n    return null;\r\n  } finally {\r\n    setLoading(false);\r\n  }\r\n};\r\n\r\nexport const onCreateNewReview = async (data) => {\r\n  const { setLoading, setError, file, content, rating, token } = data;\r\n\r\n  try {\r\n    setLoading(true);\r\n    if (file) {\r\n      const formData = new FormData();\r\n      formData.append(\"image\", file);\r\n      formData.append(\"content\", content);\r\n      formData.append(\"rating\", rating);\r\n      await axios.post(backendUrl + \"/replies/withImage\", formData, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      });\r\n    } else {\r\n      await axios.post(\r\n        backendUrl + \"/replies/\",\r\n        {\r\n          content,\r\n          rating,\r\n        },\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n        }\r\n      );\r\n    }\r\n    return { message: \"success\" };\r\n  } catch (e) {\r\n    console.log(e, e.response);\r\n    setError(true);\r\n  } finally {\r\n    setLoading(false);\r\n  }\r\n};\r\n","import React, { useState, useEffect } from \"react\";\nimport { Link, useLocation } from \"react-router-dom\";\nimport store from \"store\";\nimport dayjs from \"dayjs\";\nimport \"dayjs/locale/ru\";\nimport ReactStars from \"react-rating-stars-component\";\n\nimport { getAllReviews, onCreateNewReview } from \"./services/review-requests\";\nimport ErrorComponent from \"../../components/Errors/ErrorIndicator/index\";\nimport Spinner from \"../../components/Spinner/index\";\nimport Modal from \"../../components/UI/Modal/Modal\";\nimport { backendUrl } from \"../../config/config\";\n\nimport { GrPrevious, GrNext, GrClose } from \"react-icons/gr\";\nimport avatar from \"../../assets/page/Order/default-avatar.png\";\nimport \"./reviews.scss\";\n\nconst SuccessCreatedModalContent = () => (\n  <p>Ваш отзыв в ближайшее время будет опубликован</p>\n);\n\nconst Reviews = () => {\n  const { user } = store.get(\"24rolls\");\n  const token = user ? user.token : null;\n\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(false);\n  const [reviews, setReviews] = useState([]);\n  const [showForm, setShowForm] = useState(false);\n  const [successCreatedReview, setSuccessCreatedReview] = useState(false);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [content, setContent] = useState(\"\");\n  const [uploadedFile, setUploadedFile] = useState({\n    file: null,\n    imagePreviewUrl: null,\n  });\n  const [rating, setRating] = useState(5);\n  const location = useLocation();\n\n  useEffect(() => {\n    const onGetAllReviews = async () => {\n      const requestResult = await getAllReviews({\n        setLoading,\n        setError,\n        currentPage,\n      });\n      setReviews(requestResult.data);\n      console.log(requestResult);\n    };\n\n    onGetAllReviews();\n\n    return () => {};\n  }, [currentPage]);\n\n  const onButtonReviewClicked = () => {\n    setShowForm((el) => !el);\n  };\n\n  const onButtonGrCloseClicked = () => {\n    setUploadedFile({\n      file: null,\n      imagePreviewUrl: null,\n    });\n  };\n  const formStyles = showForm ? \"review__form show\" : \"review__form\";\n  function onSelectImageHandler(e) {\n    const reader = new FileReader();\n    reader.onloadend = () => {\n      setUploadedFile({\n        file: file,\n        imagePreviewUrl: reader.result,\n      });\n    };\n\n    const file = e.target.files[0];\n    if (file) {\n      reader.readAsDataURL(file);\n    } else {\n      setUploadedFile({ file: null, imagePreviewUrl: null });\n    }\n  }\n\n  const createDisabled = content.length === 0;\n\n  return (\n    <>\n      {error && <ErrorComponent />}\n      {loading && <Spinner />}\n      {!error && !loading && (\n        <>\n          <Modal\n            show={successCreatedReview}\n            modalClosed={() => setSuccessCreatedReview(false)}\n          >\n            <SuccessCreatedModalContent />\n          </Modal>\n          <div className=\"review\">\n            <div className=\"review__header\">\n              <span>Ваши пожелания в нашем меню</span>\n              <button onClick={onButtonReviewClicked}>Добавить отзыв</button>\n            </div>\n            <div className={formStyles}>\n              {token && (\n                <>\n                  <div className=\"rating\">\n                    <p>рейтинг:</p>\n                    <ReactStars\n                      count={5}\n                      value={rating}\n                      onChange={(val) => setRating(val)}\n                      size={30}\n                    />\n                  </div>\n                  <div className=\"review__form-text\">\n                    <textarea\n                      value={content}\n                      onChange={(e) => onChangeContent(e.target.value)}\n                      placeholder=\"Оставьте отзыв\"\n                    />\n                  </div>\n                  <div className=\"review__form-controls\">\n                    <div className=\"review__form-controls-file\">\n                      <label for=\"file-upload\">Отправить фото</label>\n                      <input\n                        onChange={onSelectImageHandler}\n                        type=\"file\"\n                        id=\"file-upload\"\n                        accept=\"image/*\"\n                      />\n                      {uploadedFile.imagePreviewUrl && (\n                        <button onClick={onButtonGrCloseClicked}>\n                          <GrClose />\n                        </button>\n                      )}\n                    </div>\n                    <div className=\"review__form-controls-buttons\">\n                      <button onClick={onButtonReviewClicked}>Отменить</button>\n                      <button\n                        disabled={createDisabled}\n                        onClick={!createDisabled ? onCreateReview : () => {}}\n                      >\n                        Оставить отзыв\n                      </button>\n                    </div>\n                  </div>\n                  {uploadedFile.imagePreviewUrl && (\n                    <div className=\"review__form-photo\">\n                      <img src={uploadedFile.imagePreviewUrl} />\n                    </div>\n                  )}\n                </>\n              )}\n              {!token && (\n                <p className=\"form-blocked\">\n                  {\"Чтобы оставить отзыв вы должны \"}\n                  <Link to={location.pathname.slice(0, 3) + \"/log-in\"}>\n                    {\"Войти\"}\n                  </Link>\n                </p>\n              )}\n            </div>\n            {reviews &&\n              reviews.length > 0 &&\n              reviews.map((el, index) => {\n                if (el.status === \"Posted\") {\n                  return (\n                    <div className=\"review__item\" key={index}>\n                      <div className=\"review__item-avatar\">\n                        <img src={avatar} />\n                      </div>\n                      <div className=\"review__item-text\">\n                        <div className=\"review__item-text-title\">\n                          <span className=\"name\">\n                            {el.userId && el.userId.name}\n                          </span>\n                          <span className=\"date\">\n                            {dayjs(el.date)\n                              .locale(\"ru\")\n                              .format(\"DD MMMM YYYY г. H:mm\")}\n                          </span>\n                          <div className=\"review__item-text-title-mark\">\n                            <ReactStars\n                              count={5}\n                              value={el.rating}\n                              edit={false}\n                              size={30}\n                            />\n                          </div>\n                        </div>\n                        <div className=\"review__item-text-content\">\n                          <span>{el.content}</span>\n                        </div>\n                        {el.image && (\n                          <div className=\"review__item-photo\">\n                            <img src={backendUrl + \"/\" + el.image} />\n                          </div>\n                        )}\n                      </div>\n                    </div>\n                  );\n                } else return null;\n              })}\n            <div className=\"review__pagination\">\n              <div\n                className=\"review__pagination-item previous\"\n                onClick={() =>\n                  setCurrentPage(currentPage === 1 ? 1 : currentPage - 1)\n                }\n              >\n                <GrPrevious />\n              </div>\n              {[\n                currentPage - 1,\n                currentPage,\n                currentPage + 1,\n                currentPage + 2,\n              ].map((el) => {\n                if (el >= 1) {\n                  return (\n                    <div\n                      onClick={() =>\n                        reviews.length < 10 && currentPage < el\n                          ? null\n                          : setCurrentPage(el)\n                      }\n                      className={\n                        el === currentPage\n                          ? \"review__pagination-item current\"\n                          : \"review__pagination-item\"\n                      }\n                    >\n                      <span>{el}</span>\n                    </div>\n                  );\n                } else return null;\n              })}\n              <div\n                className=\"review__pagination-item next\"\n                onClick={() =>\n                  reviews.length < 10 ? null : setCurrentPage(currentPage + 1)\n                }\n              >\n                <GrNext />\n              </div>\n            </div>\n          </div>\n        </>\n      )}\n    </>\n  );\n\n  function onChangeContent(value) {\n    let savingValue;\n    if (value.length > 2000) {\n      savingValue = value.slice(0, 2000);\n    } else savingValue = value;\n\n    setContent(savingValue);\n  }\n\n  async function onCreateReview() {\n    const creatingData = {\n      file: uploadedFile.file,\n      content,\n      rating,\n    };\n    const result = await onCreateNewReview({\n      ...creatingData,\n      setLoading,\n      setError,\n      token,\n    });\n\n    setShowForm(false);\n    setRating(5);\n    setContent(\"\");\n    setUploadedFile({\n      file: null,\n      imagePreviewUrl: null,\n    });\n    if (result && result.message && result.message === \"success\") {\n      setSuccessCreatedReview(true);\n    }\n  }\n};\n\nexport default Reviews;\n"],"sourceRoot":""}