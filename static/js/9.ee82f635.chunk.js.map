{"version":3,"sources":["components/HeadingBlock/index.jsx","page/Shares/index.js"],"names":["HeadingBlock","title","svg","className","Shares","React","memo","props","t","useTranslation","useState","loading","setLoading","error","setError","shares","setShares","useEffect","axios","get","backendUrl","then","res","data","catch","err","finally","style","display","flexDirection","alignItems","name","content","async","type","map","el","join","description","Date","getFullYear","JSON","stringify","createJSONLD","action","src","image","alt","_id"],"mappings":"iIAaeA,IAVM,SAAC,GAAkB,IAAjBC,EAAgB,EAAhBA,MAAgB,EAATC,IAC1B,OACI,qBAAKC,UAAU,eAAf,SACI,6BACKF,Q,+LCKXG,EAASC,IAAMC,MAAK,SAACC,GAAW,IAE3BC,EAAKC,cAALD,EAF0B,EAIDE,oBAAS,GAJR,mBAIzBC,EAJyB,KAIhBC,EAJgB,OAKLF,oBAAS,GALJ,mBAKzBG,EALyB,KAKlBC,EALkB,OAMHJ,mBAAS,IANN,mBAMzBK,EANyB,KAMjBC,EANiB,KAQjCC,qBAAU,WACNC,IAAMC,IAAIC,IAAa,aACtBC,MAAK,SAAAC,GACFN,EAAUM,EAAIC,MACdT,GAAS,MAEZU,OAAM,SAAAC,GACHX,GAAS,MAEZY,SAAQ,kBAAMd,GAAW,QAE3B,IA6BH,OACI,sBAAKe,MAAO,CAACC,QAAS,OAAQC,cAAe,SAAUC,WAAY,UAAnE,UAEI,eAAC,IAAD,WACI,sBAAMC,KAAK,WAAWC,QAAQ,gyBAC9B,wBAAQC,OAAK,EAACC,KAAK,sBAAnB,SAhCS,WACjB,IAAMX,EAAO,CACT,WAAY,sBACZ,QAAS,YACT,UAAa,CACT,QAAS,SACT,KAAQ,WAEZ,UAAa,CACT,QAAS,SACT,KAAQ,WAEZ,SAAY,CACR,QAAS,SACT,KAAQ,WAEZ,gBAAmB,QACnB,MAASR,EAAOoB,KAAI,SAAAC,GAAE,OAAIA,EAAGnC,SAAOoC,KAAK,MACzC,YAAetB,EAAOoB,KAAI,SAAAC,GAAE,OAAIA,EAAGE,eAAaD,KAAK,MACrD,SAAY,yFACZ,KAAQ,iCACR,WAAa,IAAIE,MAAOC,eAG5B,OAAOC,KAAKC,UAAUnB,GASToB,QAIT,cAAC,IAAD,CAAc1C,MAAOO,EAAE,gBAAiBN,KAAK,IAC3CS,GAAW,cAAC,IAAD,IACXE,GAAS,cAAC,IAAD,IACVE,EAAO,IACJ,qBAAKZ,UAAU,iBAAf,SAEQY,EAAOoB,KAAI,SAAAS,GAAM,OACb,sBAAKzC,UAAU,wBAAf,UACI,qBAAKA,UAAU,gCAAf,SACI,qBAAK0C,IAAKzB,IAAU,WAAOwB,EAAOE,OAASC,IAAI,YAEnD,sBAAK5C,UAAU,iCAAf,UACI,6BAAKyC,EAAO3C,QACZ,4BAAI2C,EAAON,mBANyBM,EAAOI,WAc9DjC,EAAO,KAAOJ,IAAYE,GAC3B,4BAAI,wGAMLT","file":"static/js/9.ee82f635.chunk.js","sourcesContent":["import React from 'react';\nimport './index.scss';\n\nconst HeadingBlock = ({title, svg}) => {\n    return (\n        <div className=\"heading-blog\">\n            <h2>\n                {title}\n            </h2>\n        </div>\n    )\n}\n\nexport default HeadingBlock;","import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { Helmet } from 'react-helmet';\nimport { useTranslation } from 'react-i18next';\nimport {backendUrl} from '../../config/config';\n\nimport HeadingBlock from \"../../components/HeadingBlock\";\nimport './index.scss';\n\nimport Spinner from \"../../components/Spinner\";\nimport ErrorIndicator from \"../../components/Errors/ErrorIndicator\";\n\nconst Shares = React.memo((props) => {\n\n    const {t} = useTranslation();\n\n    const [ loading, setLoading ] = useState(true);\n    const [ error, setError ] = useState(false);\n    const [ shares, setShares ] = useState([]);\n\n    useEffect(() => {\n        axios.get(backendUrl + '/actions/')\n        .then(res => {\n            setShares(res.data);\n            setError(false);\n        })\n        .catch(err => {\n            setError(true);\n        })\n        .finally(() => setLoading(false));\n        ;\n    }, []);\n\n    const createJSONLD = () => {\n        const data = {\n            '@context': 'https://schema.org/',\n            \"@type\": \"FoodEvent\",\n            'organizer': {\n                '@type': 'Person',\n                'name': '24ROLLS'\n            },\n            'performer': {\n                '@type': 'Person',\n                'name': '24ROLLS'\n            },\n            'attendee': {\n                '@type': 'Person',\n                'name': '24ROLLS'\n            },\n            'typicalAgeRange': '0-100',\n            'about': shares.map(el => el.title).join(', '),\n            'description': shares.map(el => el.description).join(', '),\n            'location': 'Днепр, Запорожье',\n            'name': 'Акции',\n            'startDate': new Date().getFullYear(),\n        };\n\n        return JSON.stringify(data);\n    }\n\n    return (\n        <div style={{display: 'flex', flexDirection: 'column', alignItems: 'center'}}>\n\n            <Helmet>\n                <meta name=\"keywords\" content=\"Заказать суши, роллы, wok, пасту, салаты, супы, напитки, доставка, Днепр, Запорожье, Харьков, вкусно,  быстрая доставка, акции, скидки, выгодные предложения, подарки\" />\n                <script async type=\"application/ld+json\">\n                    {createJSONLD()}\n                </script>\n            </Helmet>\n\n            <HeadingBlock title={t('shares.title')} svg={true} />\n             {loading && <Spinner /> }\n             {error && <ErrorIndicator />}\n            {shares[0] &&\n                <div className=\"masonry-layout\">\n                    {\n                        shares.map(action =>\n                            <div className=\"masonry-layout__panel\" key={action._id}>\n                                <div className=\"masonry-layout__panel__header\">\n                                    <img src={backendUrl + `/${action.image}`} alt=\"rolls\"/>\n                                </div>\n                                <div className=\"masonry-layout__panel__content\">\n                                    <h4>{action.title}</h4>\n                                    <p>{action.description}</p>\n                                </div>\n                            </div>\n                        )\n                    }\n                </div>\n            }\n            {\n                !shares[0] && !loading && !error &&\n                <p>{'Пока что акций нет'}</p>\n            }\n        </div>\n    );\n});\n\nexport default Shares;"],"sourceRoot":""}