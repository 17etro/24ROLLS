{"version":3,"sources":["api/useFetch.jsx","page/CardProduct/HeaderBlock/index.jsx","page/CardProduct/index.jsx"],"names":["url","baseUrl","backendUrl","useState","isLoading","setIsLoading","response","setResponse","error","setError","method","resOption","useEffect","axios","then","res","data","catch","err","finally","HeaderBlock","props","useCustomStore","state","dispatch","t","useTranslation","phone","setPhone","className","food","name","pieces","weight","Truncate","lines","ellipsis","description","src","min","alt","onClick","type","ACTIONS","REMOVE_TO_BASKET","payload","_id","width","height","undefined","cart","basket","find","el","id","map","countBasket","max","ADD_TO_BASKET","price","defaultPrice","Basket","title","style","country","inputExtraProps","required","autoFocus","value","onChange","e","handleOnChange","image","CardProduct","useFetch","match","Spinner","ErrorIndicator","SetsSlider","list"],"mappings":"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","file":"static/js/6.2fa407eb.chunk.js","sourcesContent":["import {useState, useEffect} from 'react';\nimport { backendUrl } from '../config/config';\nimport axios from 'axios';\n\n// const baseUrl = 'https://24rolls.retailcrm.ru/app/api/';\n\nexport default (url) => {\n    const baseUrl = backendUrl;\n    const [isLoading, setIsLoading] = useState(true);\n    const [response, setResponse] = useState(null);\n    const [error, setError] = useState(null);\n    const [resOption, setResOption] = useState({method: \"GET\"});\n    \n    useEffect(() => {\n        if(!isLoading) {\n            setIsLoading(true)\n        }\n        axios(baseUrl + url, resOption)\n            .then(res => {\n                setResponse(res.data);\n            })\n            .catch(err => {\n                setError(err);\n            })\n            .finally(() => {\n                setIsLoading(false);\n            })\n    }, [url, resOption])\n    return [response, error, isLoading]\n}\n","import React, {useState} from 'react';\nimport Truncate from \"react-truncate\";\nimport PhoneInput from 'react-phone-input-2';\nimport { useTranslation } from 'react-i18next';\nimport {object} from \"prop-types\";\nimport { backendUrl } from '../../../config/config';\n\nimport './index.scss';\nimport min from \"../../../assets/page/Rolls/min.svg\";\nimport max from \"../../../assets/page/Rolls/max.svg\";\nimport {ACTIONS} from \"../../../context/providerContext\";\nimport {useCustomStore} from \"../../../context/useStore\";\nimport Basket from \"../../../components/Basket\";\n\nconst HeaderBlock = (props) => {\n    const {state, dispatch} = useCustomStore();\n    const {t} = useTranslation();\n    const [phone, setPhone] = useState('')\n    const handleOnChange = (e) => {\n        setPhone(e)\n    }\n    return (\n        <div\n            className={'header-slider'}\n            key={props.food._id}\n        >\n            <div className={'header-slider_list-block'}>\n                <div className={'list-content'}>\n                    <div className={'list-content_header'}>\n                        <h2>{props.food.name}</h2>\n                        <p>({props.food.pieces} шт.) Вес {props.food.weight} г. </p>\n                        <Truncate\n                            lines={4}\n                            ellipsis={<span>...</span>}\n                        >\n                            <span> {props.food.description}</span>\n                        </Truncate>\n                    </div>\n                    <div className={'list-content_center'}>\n                        <amp-img\n                            src={min}\n                            alt={'-'}\n                            onClick={() => dispatch({type: ACTIONS.REMOVE_TO_BASKET, payload: props.food._id})}\n                            width={'12'}\n                            height={'62'}\n                        >\n                        </amp-img>\n                        <span>\n                                <p>\n                                    {\n                                        state.cart.basket!== undefined &&\n                                        state.cart.basket.find(el => el.id === props.food._id) ?\n                                            state.cart.basket.map(el => {\n                                                if(el.id === props.food._id){\n                                                    return el.countBasket\n                                                }\n                                            }) : 1\n                                    }\n                                </p>\n                            </span>\n                        <amp-img\n                            src={max}\n                            alt={'+'}\n                            onClick={() =>  dispatch({type: ACTIONS.ADD_TO_BASKET, payload: props.food})}\n                            width={'12'}\n                            height={'62'}\n                        >\n                        </amp-img>\n                    </div>\n                    <div className={'list-content_footer'}>\n                        <div className={'price'}>\n                            <h2>{props.food.price} грн.</h2>\n                            {\n                                props.food.defaultPrice && <p>{props.food.defaultPrice} грн.</p>\n                            }\n                        </div>\n                        <Basket {...props} title={'button.toOrder'} style={'open-modalTwo'} />\n                        <div className={'phone-input'}>\n                            <PhoneInput\n                                country={'ua'}\n                                inputExtraProps={{\n                                    name: \"phone\",\n                                    required: true,\n                                    autoFocus: true\n                                }}\n                                value={phone}\n                                onChange={e => handleOnChange(e)}\n                            />\n                            <button className={'price-button'}>\n                                {t('button.orderInClick')}\n                            </button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div className={'header-slider_image-block'}>\n                <img\n                    src={backendUrl + `/${props.food.image}`}\n                    alt={props.food.name}\n                />\n            </div>\n        </div>\n    )\n}\n\nHeaderBlock.propTypes = {\n    food: object.isRequired\n}\n\nexport default HeaderBlock;","import React from 'react';\n\nimport HeaderBlock from \"./HeaderBlock\";\nimport SetsSlider from '../../components/SetsSlider'\nimport './index.scss'\nimport {useCustomStore} from \"../../context/useStore\";\nimport useFetch from \"../../api/useFetch\";\nimport Spinner from \"../../components/Spinner\";\nimport ErrorIndicator from \"../../components/Errors/ErrorIndicator\";\n\nconst CardProduct = (props) => {\n    const [response, error, isLoading] = useFetch(props.match.url)\n    return (\n        <div className={'card-product'}>\n            {isLoading && <Spinner /> }\n            {error && <ErrorIndicator />}\n            {\n                response && <HeaderBlock food={response}/>\n            }\n            <SetsSlider list={[]} title={true} />\n        </div>\n    )\n}\n\nexport default CardProduct;"],"sourceRoot":""}