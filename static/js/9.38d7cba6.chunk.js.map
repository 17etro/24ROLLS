{"version":3,"sources":["components/HeadingBlock/index.jsx","page/Shares/index.js"],"names":["HeadingBlock","title","h","svg","className","Shares","React","memo","props","t","useTranslation","useState","loading","setLoading","error","setError","shares","setShares","useEffect","axios","get","backendUrl","then","res","data","catch","err","finally","style","display","flexDirection","alignItems","seo","name","content","description","keywords","async","type","map","el","join","Date","getFullYear","JSON","stringify","createJSONLD","action","src","image","alt","_id"],"mappings":"iIAkBeA,IAdM,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,MAAYC,GAAO,EAAZC,IAAY,EAAPD,GAC/B,OACI,qBAAKE,UAAU,eAAf,SACW,OAANF,EACD,6BACKD,IAEL,6BACKA,Q,gMCAXI,EAASC,IAAMC,MAAK,SAACC,GAAW,IAE3BC,EAAKC,cAALD,EAF0B,EAIDE,oBAAS,GAJR,mBAIzBC,EAJyB,KAIhBC,EAJgB,OAKLF,oBAAS,GALJ,mBAKzBG,EALyB,KAKlBC,EALkB,OAMHJ,mBAAS,IANN,mBAMzBK,EANyB,KAMjBC,EANiB,KAQjCC,qBAAU,WACNC,IAAMC,IAAIC,IAAa,aACtBC,MAAK,SAAAC,GACFN,EAAUM,EAAIC,MACdT,GAAS,MAEZU,OAAM,SAAAC,GACHX,GAAS,MAEZY,SAAQ,kBAAMd,GAAW,QAC3B,IA6BH,OACI,sBAAKe,MAAO,CAACC,QAAS,OAAQC,cAAe,SAAUC,WAAY,UAAnE,UAEI,eAAC,IAAD,WACI,gCACKvB,EAAMwB,IAAMxB,EAAMwB,IAAI/B,MAAQ,YAEnC,sBAAMgC,KAAK,cAAcC,QAAS1B,EAAMwB,KAAOxB,EAAMwB,IAAIG,cACzD,sBAAMF,KAAK,WAAWC,QAAS1B,EAAMwB,KAAOxB,EAAMwB,IAAII,WACtD,wBAAQC,OAAK,EAACC,KAAK,sBAAnB,SApCS,WACjB,IAAMd,EAAO,CACT,WAAY,sBACZ,QAAS,YACT,UAAa,CACT,QAAS,SACT,KAAQ,WAEZ,UAAa,CACT,QAAS,SACT,KAAQ,WAEZ,SAAY,CACR,QAAS,SACT,KAAQ,WAEZ,gBAAmB,QACnB,MAASR,EAAOuB,KAAI,SAAAC,GAAE,OAAIA,EAAGvC,SAAOwC,KAAK,MACzC,YAAezB,EAAOuB,KAAI,SAAAC,GAAE,OAAIA,EAAGL,eAAaM,KAAK,MACrD,SAAY,yFACZ,KAAQ,iCACR,WAAa,IAAIC,MAAOC,eAG5B,OAAOC,KAAKC,UAAUrB,GAaTsB,QAIT,cAAC,IAAD,CAAc7C,MAAOQ,EAAE,gBAAiBN,KAAK,EAAMD,EAAG,OACpDU,GAAW,cAAC,IAAD,IACXE,GAAS,cAAC,IAAD,IACVE,EAAO,IACJ,qBAAKZ,UAAU,iBAAf,SAEQY,EAAOuB,KAAI,SAAAQ,GAAM,OACb,sBAAK3C,UAAU,wBAAf,UACI,qBAAKA,UAAU,gCAAf,SACI,qBAAK4C,IAAK3B,IAAU,WAAO0B,EAAOE,OAASC,IAAI,YAEnD,sBAAK9C,UAAU,iCAAf,UACI,6BAAK2C,EAAO9C,QACZ,4BAAI8C,EAAOZ,mBANyBY,EAAOI,WAc9DnC,EAAO,KAAOJ,IAAYE,GAC3B,4BAAI,wGAMLT","file":"static/js/9.38d7cba6.chunk.js","sourcesContent":["import { props } from 'ramda';\nimport React from 'react';\nimport './index.scss';\n\nconst HeadingBlock = ({title, svg, h}) => {\n    return (\n        <div className=\"heading-blog\">\n            {h === 'h1' ? \n            <h1>\n                {title}\n            </h1> :\n            <h2>\n                {title}\n            </h2>}\n        </div>\n    )\n}\n\nexport default HeadingBlock;","import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { Helmet } from 'react-helmet';\nimport { useTranslation } from 'react-i18next';\nimport {backendUrl} from '../../config/config';\n\nimport HeadingBlock from \"../../components/HeadingBlock\";\nimport './index.scss';\n\nimport Spinner from \"../../components/Spinner\";\nimport ErrorIndicator from \"../../components/Errors/ErrorIndicator\";\n\nconst Shares = React.memo((props) => {\n\n    const {t} = useTranslation();\n\n    const [ loading, setLoading ] = useState(true);\n    const [ error, setError ] = useState(false);\n    const [ shares, setShares ] = useState([]);\n\n    useEffect(() => {\n        axios.get(backendUrl + '/actions/')\n        .then(res => {\n            setShares(res.data);\n            setError(false);\n        })\n        .catch(err => {\n            setError(true);\n        })\n        .finally(() => setLoading(false));\n    }, []);\n\n    const createJSONLD = () => {\n        const data = {\n            '@context': 'https://schema.org/',\n            \"@type\": \"FoodEvent\",\n            'organizer': {\n                '@type': 'Person',\n                'name': '24ROLLS'\n            },\n            'performer': {\n                '@type': 'Person',\n                'name': '24ROLLS'\n            },\n            'attendee': {\n                '@type': 'Person',\n                'name': '24ROLLS'\n            },\n            'typicalAgeRange': '0-100',\n            'about': shares.map(el => el.title).join(', '),\n            'description': shares.map(el => el.description).join(', '),\n            'location': 'Днепр, Запорожье',\n            'name': 'Акции',\n            'startDate': new Date().getFullYear(),\n        };\n\n        return JSON.stringify(data);\n    }\n\n    return (\n        <div style={{display: 'flex', flexDirection: 'column', alignItems: 'center'}}>\n\n            <Helmet>\n                <title>\n                    {props.seo ? props.seo.title : '24ROLLS'}\n                </title>\n                <meta name=\"description\" content={props.seo && props.seo.description} />\n                <meta name=\"keywords\" content={props.seo && props.seo.keywords} />\n                <script async type=\"application/ld+json\">\n                    {createJSONLD()}\n                </script>\n            </Helmet>\n\n            <HeadingBlock title={t('shares.title')} svg={true} h={'h1'} />\n             {loading && <Spinner /> }\n             {error && <ErrorIndicator />}\n            {shares[0] &&\n                <div className=\"masonry-layout\">\n                    {\n                        shares.map(action =>\n                            <div className=\"masonry-layout__panel\" key={action._id}>\n                                <div className=\"masonry-layout__panel__header\">\n                                    <img src={backendUrl + `/${action.image}`} alt=\"rolls\"/>\n                                </div>\n                                <div className=\"masonry-layout__panel__content\">\n                                    <h4>{action.title}</h4>\n                                    <p>{action.description}</p>\n                                </div>\n                            </div>\n                        )\n                    }\n                </div>\n            }\n            {\n                !shares[0] && !loading && !error &&\n                <p>{'Пока что акций нет'}</p>\n            }\n        </div>\n    );\n});\n\nexport default Shares;"],"sourceRoot":""}