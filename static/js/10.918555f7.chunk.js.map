{"version":3,"sources":["page/CardProduct/HeaderBlock/index.jsx","page/CardProduct/index.jsx"],"names":["HeaderBlock","props","useCustomStore","state","dispatch","useTranslation","t","useState","console","log","food","className","name_ru","undefined","cart","basket","find","el","id","_id","map","countBasket","weight","Truncate","lines","ellipsis","description_ru","src","min","alt","onClick","type","ACTIONS","REMOVE_TO_BASKET","payload","width","height","max","ADD_TO_BASKET","price","defaultPrice","Basket","title","style","backendUrl","image","name","CardProduct","loading","setLoading","error","setError","product","setProduct","useEffect","productId","match","params","axios","get","then","res","data","catch","err","Spinner","ErrorIndicator","SetsSlider","list"],"mappings":"gSA2GeA,EA7FK,SAACC,GAAW,IAAD,EACDC,cAAnBC,EADoB,EACpBA,MAAOC,EADa,EACbA,SADa,GAEfC,cAALC,EACmBC,mBAAS,KAHR,6BAU3B,OAFAC,QAAQC,IAAIR,EAAMS,MAGd,sBACIC,UAAW,gBADf,UAII,qBAAKA,UAAW,2BAAhB,SACI,sBAAKA,UAAW,eAAhB,UACI,sBAAKA,UAAW,sBAAhB,UACI,6BAAKV,EAAMS,KAAKE,UAChB,uCAE6BC,IAArBV,EAAMW,KAAKC,QACXZ,EAAMW,KAAKC,OAAOC,MAAK,SAAAC,GAAE,OAAIA,EAAGC,KAAOjB,EAAMS,KAAKS,OAC9ChB,EAAMW,KAAKC,OAAOK,KAAI,SAAAH,GAClB,GAAGA,EAAGC,KAAOjB,EAAMS,KAAKS,IACpB,OAAOF,EAAGI,eAEb,EARjB,sCASgBpB,EAAMS,KAAKY,OAT3B,cAWA,cAACC,EAAA,EAAD,CACIC,MAAO,EACPC,SAAU,uCAFd,SAII,qCAAQxB,EAAMS,KAAKgB,uBAG3B,sBAAKf,UAAW,sBAAhB,UACI,yBACIgB,IAAKC,IACLC,IAAK,IACLC,QAAS,kBAAM1B,EAAS,CAAC2B,KAAMC,IAAQC,iBAAkBC,QAASjC,EAAMS,KAAKS,OAC7EgB,MAAO,KACPC,OAAQ,OAGZ,+BACQ,iCAE6BvB,IAArBV,EAAMW,KAAKC,QACXZ,EAAMW,KAAKC,OAAOC,MAAK,SAAAC,GAAE,OAAIA,EAAGC,KAAOjB,EAAMS,KAAKS,OAC9ChB,EAAMW,KAAKC,OAAOK,KAAI,SAAAH,GAClB,GAAGA,EAAGC,KAAOjB,EAAMS,KAAKS,IACpB,OAAOF,EAAGI,eAEb,MAIzB,yBACIM,IAAKU,IACLR,IAAK,IACLC,QAAS,kBAAO1B,EAAS,CAAC2B,KAAMC,IAAQM,cAAeJ,QAASjC,EAAMS,QACtEyB,MAAO,KACPC,OAAQ,UAIhB,sBAAKzB,UAAW,sBAAhB,UACI,sBAAKA,UAAW,QAAhB,UACI,+BAAKV,EAAMS,KAAK6B,MAAhB,0BAEItC,EAAMS,KAAK8B,cAAgB,8BAAIvC,EAAMS,KAAK8B,aAAf,6BAGnC,cAACC,EAAA,EAAD,2BAAYxC,GAAZ,IAAmByC,MAAO,iBAAkBC,MAAO,2BAI/D,qBAAKhC,UAAW,4BAAhB,SACI,qBACIgB,IAAKiB,IAAU,WAAO3C,EAAMS,KAAKmC,OACjChB,IAAK5B,EAAMS,KAAKoC,WArEnB7C,EAAMS,KAAKS,M,iCCoBb4B,UApCK,SAAC9C,GAAW,IAAD,EAEKM,oBAAS,GAFd,mBAEnByC,EAFmB,KAEVC,EAFU,OAGC1C,oBAAS,GAHV,mBAGnB2C,EAHmB,KAGZC,EAHY,OAIK5C,oBAAS,GAJd,mBAInB6C,EAJmB,KAIVC,EAJU,KAqB3B,OAfAC,qBAAU,WACN,IAAMC,EAAYtD,EAAMuD,MAAMC,OAAOvC,GAErCwC,IAAMC,IAAIf,IAAU,uBAAmBW,IAClCK,MAAK,SAAAC,GACFR,EAAWQ,EAAIC,MACfb,GAAW,MAEdc,OAAM,SAAAC,GACHb,GAAS,GACTF,GAAW,QAGpB,CAAChD,IAGA,sBAAKU,UAAW,eAAhB,UACKqC,GAAW,cAACiB,EAAA,EAAD,IACXf,GAAS,cAACgB,EAAA,EAAD,IAENd,GACA,qCACI,cAAC,EAAD,2BAAiBnD,GAAjB,IAAwBS,KAAM0C,KAC9B,cAACe,EAAA,EAAD,CAAYC,KAAM,GAAI1B,OAAO","file":"static/js/10.918555f7.chunk.js","sourcesContent":["import React, {useState} from 'react';\nimport Truncate from \"react-truncate\";\nimport PhoneInput from 'react-phone-input-2';\nimport { useTranslation } from 'react-i18next';\nimport {object} from \"prop-types\";\nimport { backendUrl } from '../../../config/config';\n\nimport './index.scss';\nimport min from \"../../../assets/page/Rolls/min.svg\";\nimport max from \"../../../assets/page/Rolls/max.svg\";\nimport {ACTIONS} from \"../../../context/providerContext\";\nimport {useCustomStore} from \"../../../context/useStore\";\nimport Basket from \"../../../components/Basket\";\n\nconst HeaderBlock = (props) => {\n    const {state, dispatch} = useCustomStore();\n    const {t} = useTranslation();\n    const [phone, setPhone] = useState('')\n    const handleOnChange = (e) => {\n        setPhone(e)\n    }\n\n    console.log(props.food);\n\n    return (\n        <div\n            className={'header-slider'}\n            key={props.food._id}\n        >\n            <div className={'header-slider_list-block'}>\n                <div className={'list-content'}>\n                    <div className={'list-content_header'}>\n                        <h1>{props.food.name_ru}</h1>\n                        <p>\n                            ({\n                                state.cart.basket!== undefined &&\n                                state.cart.basket.find(el => el.id === props.food._id) ?\n                                    state.cart.basket.map(el => {\n                                        if(el.id === props.food._id){\n                                            return el.countBasket\n                                        }\n                                    }) : 1\n                            } шт.) Вес {props.food.weight} г. \n                        </p>\n                        <Truncate\n                            lines={4}\n                            ellipsis={<span>...</span>}\n                        >\n                            <span> {props.food.description_ru}</span>\n                        </Truncate>\n                    </div>\n                    <div className={'list-content_center'}>\n                        <amp-img\n                            src={min}\n                            alt={'-'}\n                            onClick={() => dispatch({type: ACTIONS.REMOVE_TO_BASKET, payload: props.food._id})}\n                            width={'12'}\n                            height={'62'}\n                        >\n                        </amp-img>\n                        <span>\n                                <p>\n                                    {\n                                        state.cart.basket!== undefined &&\n                                        state.cart.basket.find(el => el.id === props.food._id) ?\n                                            state.cart.basket.map(el => {\n                                                if(el.id === props.food._id){\n                                                    return el.countBasket\n                                                }\n                                            }) : 1\n                                    }\n                                </p>\n                            </span>\n                        <amp-img\n                            src={max}\n                            alt={'+'}\n                            onClick={() =>  dispatch({type: ACTIONS.ADD_TO_BASKET, payload: props.food})}\n                            width={'12'}\n                            height={'62'}\n                        >\n                        </amp-img>\n                    </div>\n                    <div className={'list-content_footer'}>\n                        <div className={'price'}>\n                            <h2>{props.food.price} грн.</h2>\n                            {\n                                props.food.defaultPrice && <p>{props.food.defaultPrice} грн.</p>\n                            }\n                        </div>\n                        <Basket {...props} title={'button.toOrder'} style={'open-modalTwo'} />\n                    </div>\n                </div>\n            </div>\n            <div className={'header-slider_image-block'}>\n                <img\n                    src={backendUrl + `/${props.food.image}`}\n                    alt={props.food.name}\n                />\n            </div>\n        </div>\n    )\n}\n\nHeaderBlock.propTypes = {\n    food: object.isRequired\n}\n\nexport default HeaderBlock;","import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { backendUrl } from '../../config/config';\n\nimport HeaderBlock from \"./HeaderBlock\";\nimport SetsSlider from '../../components/SetsSlider'\nimport './index.scss'\nimport {useCustomStore} from \"../../context/useStore\";\nimport Spinner from \"../../components/Spinner\";\nimport ErrorIndicator from \"../../components/Errors/ErrorIndicator\";\n\nconst CardProduct = (props) => {\n\n    const [ loading, setLoading ] = useState(false);\n    const [ error, setError ] = useState(false);\n    const [ product, setProduct ] = useState(false);\n\n    useEffect(() => {\n        const productId = props.match.params.id;\n        \n        axios.get(backendUrl + `/products/id/${productId}`)\n            .then(res => {\n                setProduct(res.data);\n                setLoading(false);\n            })\n            .catch(err => {\n                setError(true);\n                setLoading(false);\n            });\n        \n    }, [props]);\n\n    return (\n        <div className={'card-product'}>\n            {loading && <Spinner /> }\n            {error && <ErrorIndicator />}\n            {\n                product && \n                <>\n                    <HeaderBlock {...props} food={product}/>\n                    <SetsSlider list={[]} title={true} />\n                </>\n            }\n        </div>\n    )\n}\n\nexport default CardProduct;"],"sourceRoot":""}